!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
KeyEvent	kitty/pass_keys.py	/^from kitty.key_encoding import KeyEvent, parse_shortcut$/;"	i
M.buf_map 	nvim/lua/utils.lua	/^M.buf_map = function(bufnr, mode, target, source, opts)$/;"	f
M.command 	nvim/lua/utils.lua	/^M.command = function(name, fn)$/;"	f
M.get_system_output 	nvim/lua/utils.lua	/^M.get_system_output = function(cmd)$/;"	f
M.input 	nvim/lua/utils.lua	/^M.input = function(keys, mode)$/;"	f
M.is_file 	nvim/lua/utils.lua	/^M.is_file = function(path)$/;"	f
M.lua_command 	nvim/lua/utils.lua	/^M.lua_command = function(name, fn)$/;"	f
M.make_floating_window 	nvim/lua/utils.lua	/^M.make_floating_window = function(custom_window_config, height_ratio, width_ratio)$/;"	f
M.map 	nvim/lua/utils.lua	/^M.map = function(mode, target, source, opts)$/;"	f
M.setup 	nvim/lua/lsp/bashls.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.setup 	nvim/lua/lsp/clangd.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.setup 	nvim/lua/lsp/cmake.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.setup 	nvim/lua/lsp/denols.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.setup 	nvim/lua/lsp/emmet-ls.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.setup 	nvim/lua/lsp/html.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.setup 	nvim/lua/lsp/jsonls.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.setup 	nvim/lua/lsp/null-ls.lua	/^M.setup = function(on_attach)$/;"	f
M.setup 	nvim/lua/lsp/pyright.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.setup 	nvim/lua/lsp/rls.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.setup 	nvim/lua/lsp/sumneko_lua.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.setup 	nvim/lua/lsp/tsserver.lua	/^M.setup = function(on_attach, capabilities)$/;"	f
M.t 	nvim/lua/utils.lua	/^M.t = function(str)$/;"	f
M.warn 	nvim/lua/utils.lua	/^M.warn = function(msg)$/;"	f
M[mode .. "map"] 	nvim/lua/utils.lua	/^    M[mode .. "map"] = function(...)$/;"	f
["<S-Tab>"] 	nvim/lua/plugins/cmp.lua	/^        ["<S-Tab>"] = cmp.mapping(function(fallback)$/;"	f
["<Tab>"] 	nvim/lua/plugins/cmp.lua	/^        ["<Tab>"] = cmp.mapping(function(fallback)$/;"	f
["[M"] 	nvim/init.lua	/^				["[M"] = "@function.outer",$/;"	f
["[m"] 	nvim/init.lua	/^				["[m"] = "@function.outer",$/;"	f
["]M"] 	nvim/init.lua	/^				["]M"] = "@function.outer",$/;"	f
["]m"] 	nvim/init.lua	/^				["]m"] = "@function.outer",$/;"	f
["af"] 	nvim/init.lua	/^				["af"] = "@function.outer",$/;"	f
["if"] 	nvim/init.lua	/^				["if"] = "@function.inner",$/;"	f
adjust_arch	install-misspell.sh	/^adjust_arch() {$/;"	f
adjust_format	install-misspell.sh	/^adjust_format() {$/;"	f
adjust_os	install-misspell.sh	/^adjust_os() {$/;"	f
check_platform	install-misspell.sh	/^check_platform() {$/;"	f
colors_customization	nvim/plugin/colors.vim	/^augroup colors_customization$/;"	a
condition 	nvim/lua/lsp/null-ls.lua	/^        condition = function(utils)$/;"	f
echoerr	install-misspell.sh	/^echoerr() {$/;"	f
encode_key_for_tty	kitty/pass_keys.py	/^from kitty.fast_data_types import encode_key_for_tty$/;"	i
encode_key_mapping	kitty/pass_keys.py	/^def encode_key_mapping(key_mapping):$/;"	f
execute	install-misspell.sh	/^execute() {$/;"	f
expand 	nvim/lua/plugins/cmp.lua	/^        expand = function(args)$/;"	f
format 	nvim/lua/plugins/cmp.lua	/^        format = function(_, vim_item)$/;"	f
get_commit_characters 	nvim/lua/plugins/cmp.lua	/^        get_commit_characters = function()$/;"	f
github_api	install-misspell.sh	/^github_api() {$/;"	f
github_last_release	install-misspell.sh	/^github_last_release() {$/;"	f
global.reset_autopairs 	nvim/lua/plugins/autopairs.lua	/^global.reset_autopairs = function()$/;"	f
global.toggle_autopairs 	nvim/lua/plugins/autopairs.lua	/^global.toggle_autopairs = function()$/;"	f
handle_result	kitty/neighboring_window.py	/^def handle_result(args, result, target_window_id, boss):$/;"	f
handle_result	kitty/pass_keys.py	/^def handle_result(args, result, target_window_id, boss):$/;"	f
hash_sha256	install-misspell.sh	/^hash_sha256() {$/;"	f
hash_sha256_verify	install-misspell.sh	/^hash_sha256_verify() {$/;"	f
http_download	install-misspell.sh	/^http_download() {$/;"	f
if vim.api.nvim_call_function('has', {'nvim-0.5'}) ~	nvim/plugin/packer_compiled.lua	/^if vim.api.nvim_call_function('has', {'nvim-0.5'}) ~= 1 then$/;"	f
is_command	install-misspell.sh	/^is_command() {$/;"	f
is_supported_platform	install-misspell.sh	/^is_supported_platform() {$/;"	f
is_window_vim	kitty/pass_keys.py	/^def is_window_vim(window, vim_id):$/;"	f
local config 	nvim/init.lua	/^local config = function(name)$/;"	f
local disable 	nvim/lua/plugins/autopairs.lua	/^local disable = function()$/;"	f
local enable 	nvim/lua/plugins/autopairs.lua	/^local enable = function()$/;"	f
local formatting 	nvim/lua/lsp/init.lua	/^local formatting = function(bufnr)$/;"	f
local get_map_options 	nvim/lua/utils.lua	/^local get_map_options = function(custom_options)$/;"	f
local has_words_before 	nvim/lua/plugins/cmp.lua	/^local has_words_before = function()$/;"	f
local no_errors, error_msg 	nvim/plugin/packer_compiled.lua	/^local no_errors, error_msg = pcall(function()$/;"	f
local on_attach 	nvim/lua/lsp/init.lua	/^local on_attach = function(client, bufnr)$/;"	f
local with_diagnostics_code 	nvim/lua/lsp/null-ls.lua	/^local with_diagnostics_code = function(builtin)$/;"	f
local with_root_file 	nvim/lua/lsp/null-ls.lua	/^local with_root_file = function(builtin, file)$/;"	f
log_crit	install-misspell.sh	/^log_crit() {$/;"	f
log_debug	install-misspell.sh	/^log_debug() {$/;"	f
log_err	install-misspell.sh	/^log_err() {$/;"	f
log_info	install-misspell.sh	/^log_info() {$/;"	f
log_prefix	install-misspell.sh	/^log_prefix() {$/;"	f
log_priority	install-misspell.sh	/^log_priority() {$/;"	f
log_set_priority	install-misspell.sh	/^log_set_priority() {$/;"	f
main	kitty/neighboring_window.py	/^def main():$/;"	f
main	kitty/pass_keys.py	/^def main():$/;"	f
mktmpdir	install-misspell.sh	/^mktmpdir() {$/;"	f
on_attach 	nvim/lua/lsp/eslint.lua	/^            on_attach = function(client, bufnr)$/;"	f
on_attach 	nvim/lua/lsp/tsserver.lua	/^        on_attach = function(client, bufnr)$/;"	f
parse_args	install-misspell.sh	/^parse_args() {$/;"	f
parse_shortcut	kitty/pass_keys.py	/^from kitty.key_encoding import KeyEvent, parse_shortcut$/;"	i
re	kitty/pass_keys.py	/^import re$/;"	i
result_handler	kitty/pass_keys.py	/^from kittens.tui.handler import result_handler$/;"	i
save_profiles	nvim/plugin/packer_compiled.lua	/^local function save_profiles(threshold)$/;"	f
setup 	nvim/lua/lsp/eslint.lua	/^    setup = function(on_attach, capabilities)$/;"	f
setup_colors	nvim/plugin/colors.vim	/^function! s:setup_colors() abort$/;"	f
tag_to_version	install-misspell.sh	/^tag_to_version() {$/;"	f
time 	nvim/plugin/packer_compiled.lua	/^    time = function(chunk, start) end$/;"	f
time 	nvim/plugin/packer_compiled.lua	/^    time = function(chunk, start)$/;"	f
try_loadstring	nvim/plugin/packer_compiled.lua	/^local function try_loadstring(s, component, name)$/;"	f
uname_arch	install-misspell.sh	/^uname_arch() {$/;"	f
uname_arch_check	install-misspell.sh	/^uname_arch_check() {$/;"	f
uname_os	install-misspell.sh	/^uname_os() {$/;"	f
uname_os_check	install-misspell.sh	/^uname_os_check() {$/;"	f
untar	install-misspell.sh	/^untar() {$/;"	f
usage	install-misspell.sh	/^usage() {$/;"	f
