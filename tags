!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/hglong/.config/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/b4f0dfbd/
"map"]	nvim/lua/utils.lua	/^    M[mode .. "map"] = function(...)$/;"	f
$schema	.luarc.json	/^    "$schema": "https:\/\/raw.githubusercontent.com\/sumneko\/vscode-lua\/master\/setting\/schem/;"	s
0	.luarc.json	/^        "undefined-doc-name",$/;"	s	array:Lua.diagnostics.disable
1	.luarc.json	/^        "undefined-global",$/;"	s	array:Lua.diagnostics.disable
2	.luarc.json	/^        "duplicate-doc-class"$/;"	s	array:Lua.diagnostics.disable
Lua.diagnostics.disable	.luarc.json	/^    "Lua.diagnostics.disable": [$/;"	a
Lua.workspace.checkThirdParty	.luarc.json	/^    "Lua.workspace.checkThirdParty": false$/;"	b
["<S-tab>"]	nvim/lua/plugins/cmp.lua	/^        ["<S-tab>"] = cmp.mapping(function(fallback)$/;"	f
["<tab>"]	nvim/lua/plugins/cmp.lua	/^        ["<tab>"] = cmp.mapping(function(fallback)$/;"	f
['[M']	nvim/init.lua	/^        ['[M'] = '@function.outer',$/;"	f
['[m']	nvim/init.lua	/^        ['[m'] = '@function.outer',$/;"	f
[']M']	nvim/init.lua	/^        [']M'] = '@function.outer',$/;"	f
[']m']	nvim/init.lua	/^        [']m'] = '@function.outer',$/;"	f
['af']	nvim/init.lua	/^        ['af'] = '@function.outer',$/;"	f
['if']	nvim/init.lua	/^        ['if'] = '@function.inner',$/;"	f
buf_map	nvim/lua/utils.lua	/^M.buf_map = function(bufnr, mode, target, source, opts)$/;"	f	unknown:M
colors_customization	nvim/plugin/colors.vim	/^augroup colors_customization$/;"	a
command	nvim/lua/utils.lua	/^M.command = function(name, fn)$/;"	f	unknown:M
condition	nvim/lua/lsp/null-ls.lua	/^        condition = function(utils)$/;"	f
config	nvim/init.lua	/^local config = function(name)$/;"	f
disable	nvim/lua/plugins/autopairs.lua	/^local disable = function()$/;"	f
enable	nvim/lua/plugins/autopairs.lua	/^local enable = function()$/;"	f
enabled_layouts tall	kitty/kitty.conf	/^enabled_layouts tall:bias=50;full_size=1;mirrored=false$/;"	k
encode_key_mapping	kitty/pass_keys.py	/^def encode_key_mapping(key_mapping):$/;"	f
error_msg	nvim/plugin/packer_compiled.lua	/^local no_errors, error_msg = pcall(function()$/;"	f
expand	nvim/lua/plugins/cmp.lua	/^        expand = function(args)$/;"	f
formatting	nvim/lua/lsp/init.lua	/^local formatting = function(bufnr)$/;"	f
get_map_options	nvim/lua/utils.lua	/^local get_map_options = function(custom_options)$/;"	f
get_system_output	nvim/lua/utils.lua	/^M.get_system_output = function(cmd)$/;"	f	unknown:M
get_trigger_characters	nvim/lua/plugins/cmp.lua	/^        get_trigger_characters = function(trigger_characters)$/;"	f
handle_result	kitty/neighboring_window.py	/^def handle_result(args, result, target_window_id, boss):$/;"	f
handle_result	kitty/pass_keys.py	/^def handle_result(args, result, target_window_id, boss):$/;"	f
hglong dotfile	README.md	/^# hglong dotfile$/;"	c
input	nvim/lua/utils.lua	/^M.input = function(keys, mode)$/;"	f	unknown:M
is_file	nvim/lua/utils.lua	/^M.is_file = function(path)$/;"	f	unknown:M
is_window_vim	kitty/pass_keys.py	/^def is_window_vim(window, vim_id):$/;"	f
k combine	kitty/kitty.conf	/^map cmd+k combine : clear_terminal scrollback active : send_text normal \\x0c$/;"	k
listen_on unix	kitty/kitty.conf	/^listen_on unix:\/tmp\/mykitty$/;"	k
lua_command	nvim/lua/utils.lua	/^M.lua_command = function(name, fn)$/;"	f	unknown:M
main	kitty/neighboring_window.py	/^def main():$/;"	f
main	kitty/pass_keys.py	/^def main():$/;"	f
make_floating_window	nvim/lua/utils.lua	/^M.make_floating_window = function(custom_window_config, height_ratio, width_ratio)$/;"	f	unknown:M
map	nvim/lua/utils.lua	/^M.map = function(mode, target, source, opts)$/;"	f	unknown:M
on_attach	nvim/lua/lsp/eslint.lua	/^            on_attach = function(client, bufnr)$/;"	f
on_attach	nvim/lua/lsp/init.lua	/^local on_attach = function(client, bufnr)$/;"	f
on_attach	nvim/lua/lsp/tsserver.lua	/^        on_attach = function(client, bufnr)$/;"	f
reset_autopairs	nvim/lua/plugins/autopairs.lua	/^global.reset_autopairs = function()$/;"	f	unknown:global
s:setup_colors	nvim/plugin/colors.vim	/^function! s:setup_colors() abort$/;"	f
save_profiles	nvim/plugin/packer_compiled.lua	/^local function save_profiles(threshold)$/;"	f
setup	nvim/lua/lsp/bashls.lua	/^M.setup = function(on_attach, capabilities)$/;"	f	unknown:M
setup	nvim/lua/lsp/denols.lua	/^M.setup = function(on_attach, capabilities)$/;"	f	unknown:M
setup	nvim/lua/lsp/emmet-ls.lua	/^M.setup = function(on_attach, capabilities)$/;"	f	unknown:M
setup	nvim/lua/lsp/eslint.lua	/^    setup = function(on_attach, capabilities)$/;"	f
setup	nvim/lua/lsp/html.lua	/^M.setup = function(on_attach, capabilities)$/;"	f	unknown:M
setup	nvim/lua/lsp/jsonls.lua	/^M.setup = function(on_attach, capabilities)$/;"	f	unknown:M
setup	nvim/lua/lsp/null-ls.lua	/^M.setup = function(on_attach)$/;"	f	unknown:M
setup	nvim/lua/lsp/sumneko_lua.lua	/^M.setup = function(on_attach, capabilities)$/;"	f	unknown:M
setup	nvim/lua/lsp/tsserver.lua	/^M.setup = function(on_attach, capabilities)$/;"	f	unknown:M
t	nvim/lua/utils.lua	/^M.t = function(str)$/;"	f	unknown:M
time	nvim/plugin/packer_compiled.lua	/^    time = function(chunk, start) end$/;"	f
time	nvim/plugin/packer_compiled.lua	/^    time = function(chunk, start)$/;"	f
toggle_autopairs	nvim/lua/plugins/autopairs.lua	/^global.toggle_autopairs = function()$/;"	f	unknown:global
try_loadstring	nvim/plugin/packer_compiled.lua	/^local function try_loadstring(s, component, name)$/;"	f
warn	nvim/lua/utils.lua	/^M.warn = function(msg)$/;"	f	unknown:M
with_diagnostics_code	nvim/lua/lsp/null-ls.lua	/^local with_diagnostics_code = function(builtin)$/;"	f
with_root_file	nvim/lua/lsp/null-ls.lua	/^local with_root_file = function(builtin, file)$/;"	f
